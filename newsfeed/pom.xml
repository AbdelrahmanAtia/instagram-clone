<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.2</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	
	
  <groupId>com.javaworld.instagram</groupId>
  <artifactId>newsfeed</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>News Feed</name>
  
	
	<properties>
		<java.version>1.8</java.version>
		<swagger-annotations-version>1.6.6</swagger-annotations-version>
		<jackson-databind-nullable>0.2.1</jackson-databind-nullable>
		<org.mapstruct.version>1.3.1.Final</org.mapstruct.version>
		<spring-cloud.version>2020.0.3</spring-cloud.version>
		<resilience4jVersion>1.7.0</resilience4jVersion>
		<junit-jupiter.version>5.3.2</junit-jupiter.version>
        <mockito.version>2.24.0</mockito.version>
        <mockito-core-version>3.11.2</mockito-core-version>
        <mockito-junit-jupiter-version>4.8.0</mockito-junit-jupiter-version>
        <junit-jupiter-api-version>5.7.2</junit-jupiter-api-version>
	</properties>
	
	<dependencies>
		
		<dependency>
			<groupId>com.javaworld.instagram</groupId>
			<artifactId>insta-common-lib</artifactId>
			<version>1.0.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		
		<dependency>
			<groupId>
				org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>	
		
		
		<!-- ################### Testing dependencies ################################ -->	
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
                	<groupId>org.junit</groupId>
                	<artifactId>junit</artifactId>
            	</exclusion>
			</exclusions>
		</dependency>
		
	    <!-- JUnit Jupiter API -->
	    <dependency>
	        <groupId>org.junit.jupiter</groupId>
	        <artifactId>junit-jupiter-api</artifactId>
	        <scope>test</scope>
	    </dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		
	    <!-- Mockito core -->
	    <dependency>
	        <groupId>org.mockito</groupId>
	        <artifactId>mockito-core</artifactId>
	        <version>3.11.2</version>	        
	        <scope>test</scope>
	    </dependency>

	    <!-- Mockito JUnit Jupiter -->
	    <dependency>
	        <groupId>org.mockito</groupId>
	        <artifactId>mockito-junit-jupiter</artifactId>
	        <scope>test</scope>
	    </dependency>		

		<!-- 	
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
		</dependency>		
		-->
				
		<!-- ################### Resilience  configuration ############### -->
		<dependency>
			<groupId>
				io.github.resilience4j</groupId>
			<artifactId>resilience4j-spring-boot2</artifactId>
			<version>
				${resilience4jVersion}</version>
		</dependency>
		
		<dependency>
			<groupId>
				io.github.resilience4j</groupId>
			<artifactId>resilience4j-reactor</artifactId>
			<version>
				${resilience4jVersion}</version>
		</dependency>
		
		<dependency>
			<groupId>
				org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>				

		<!-- ################### config server communication dependencies ############### -->
		<dependency>
			<groupId>
				org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
	
		<dependency>
			<groupId>
				org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>
		
		<!-- ################### Security dependencies ################################ -->
		<dependency>
			<groupId>
				org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>
				org.springframework.security</groupId>
			<artifactId>
				spring-security-oauth2-resource-server</artifactId>
		</dependency>
		
		<dependency>
			<groupId>
				org.springframework.boot</groupId>
			<artifactId>
				spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		

		<dependency>
			<groupId>
				org.springframework.security</groupId>
			<artifactId>
				spring-security-oauth2-jose</artifactId>
		</dependency>
		

		<!-- ########################### DB & persistence layer dependencies ################################ -->

		<dependency>
			<groupId>
				mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
				
	
		<dependency>
			<groupId>
				org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>

		<dependency>
			<groupId>
				org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>
				6.1.2.Final</version>
		</dependency>
		
		<dependency>
			<groupId>
				org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>
				com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>
				org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<!-- ################### dependencies needed for open-API code generator ################################ -->
		
		<dependency>
			<groupId>
				io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>
				${swagger-annotations-version}</version>
		</dependency>

		<dependency>
			<groupId>
				org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>
				${jackson-databind-nullable}</version>
		</dependency>

		<dependency>
		    <groupId>
				io.springfox</groupId>
		    <artifactId>springfox-boot-starter</artifactId>
		    <version>3.0.0</version>
		</dependency>
		
		<dependency>
    		<groupId>
				org.projectlombok</groupId>
    		<artifactId>lombok</artifactId>
    		<version>1.18.30</version>
    		<scope>
				provided</scope>
		</dependency>


		<!-- ################################ MapStruct ################################################ -->

		<dependency>
			<groupId>
				org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>
				${org.mapstruct.version}</version>
		</dependency>


		<dependency>
			<groupId>
				org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>
				${org.mapstruct.version}</version>
		</dependency>

		<dependency>
			<groupId>
				javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>

		<!-- ################################ Spring Cloud ################################################ -->
	
		<dependency>
			<groupId>
				org.springframework.cloud</groupId>
			<artifactId>
				spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<dependency>
			<groupId>
				org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>

		<dependency>
			<groupId>
				org.springframework.cloud</groupId>
			<artifactId>spring-cloud-sleuth-zipkin</artifactId>
		</dependency>

		<dependency>
			<groupId>
				org.springframework.cloud</groupId>
			<artifactId>
				spring-cloud-starter-stream-rabbit</artifactId>
		</dependency>

		<!-- ################################ Jasper Reports ################################################ -->
		<dependency>
			<groupId>
				net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>6.17.0</version>
		</dependency>
		
		<!-- ################################ JHipster ################################################ -->

        <dependency>
            <groupId>tech.jhipster</groupId>
            <artifactId>jhipster-framework</artifactId>
            <version>7.9.3</version>
        </dependency>	

		<!-- 
		<dependency>
		    <groupId>jakarta.persistence</groupId>
		    <artifactId>jakarta.persistence-api</artifactId>
		    <version>3.1.0</version>
		</dependency>        
		-->
        
		<!-- ################################ Jpa metamodels ########################################## -->
        
        <dependency>
	        <groupId>org.hibernate</groupId>
	        <artifactId>hibernate-jpamodelgen</artifactId>
	        <scope>provided</scope>
        </dependency>	

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>
					org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>
					${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>
					io.github.resilience4j</groupId>
				<artifactId>resilience4j-spring</artifactId>
				<version>
					${resilience4jVersion}</version>
			</dependency>
			<dependency>
				<groupId>
					io.github.resilience4j</groupId>
				<artifactId>resilience4j-annotations</artifactId>
				<version>
					${resilience4jVersion}</version>
			</dependency>
			<dependency>
				<groupId>
					io.github.resilience4j</groupId>
				<artifactId>resilience4j-consumer</artifactId>
				<version>
					${resilience4jVersion}</version>
			</dependency>
			<dependency>
				<groupId>
					io.github.resilience4j</groupId>
				<artifactId>resilience4j-core</artifactId>
				<version>
					${resilience4jVersion}</version>
			</dependency>
			<dependency>
				<groupId>
					io.github.resilience4j</groupId>
				<artifactId>resilience4j-circuitbreaker</artifactId>
				<version>
					${resilience4jVersion}</version>
			</dependency>
			<dependency>
				<groupId>
					io.github.resilience4j</groupId>
				<artifactId>resilience4j-ratelimiter</artifactId>
				<version>
					${resilience4jVersion}</version>
			</dependency>
			<dependency>
				<groupId>
					io.github.resilience4j</groupId>
				<artifactId>resilience4j-retry</artifactId>
				<version>
					${resilience4jVersion}</version>
			</dependency>
			<dependency>
				<groupId>
					io.github.resilience4j</groupId>
				<artifactId>resilience4j-bulkhead</artifactId>
				<version>
					${resilience4jVersion}</version>
			</dependency>
			<dependency>
				<groupId>
					io.github.resilience4j</groupId>
				<artifactId>resilience4j-timelimiter</artifactId>
				<version>
					${resilience4jVersion}</version>
			</dependency>
			<dependency>
				<groupId>
					io.github.resilience4j</groupId>
				<artifactId>resilience4j-micrometer</artifactId>
				<version>
					${resilience4jVersion}</version>
			</dependency>
			<dependency>
				<groupId>
					io.github.resilience4j</groupId>
				<artifactId>resilience4j-circularbuffer</artifactId>
				<version>
					${resilience4jVersion}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	

	<build>
    
		<plugins>		
		
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<layers>
						<enabled>true</enabled>
						<!-- <configuration>${project.basedir}/src/layers.xml</configuration> -->
					</layers>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				
				<configuration>
					<source>1.8</source> 
					<target>1.8</target> 
					<annotationProcessorPaths>

						<path>
				            <groupId>org.projectlombok</groupId>
				            <artifactId>lombok</artifactId>
				            <version>1.18.30</version>
						</path>

						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						
					    <!-- For JPA static metamodel generation -->
                        <path>
                            <groupId>org.hibernate</groupId>
                            <artifactId>hibernate-jpamodelgen</artifactId>
                            <version>${hibernate.version}</version>
                        </path>

						<!-- other annotation processors -->

					</annotationProcessorPaths>
				</configuration>
			</plugin>


			<!-- open API plug-in for API code generator -->
			<!-- 
			     this plugin is disabled until we fix the issue of wrapping Flux<T> with Mono like 
			     this Mono<Flux<T>> for api's that return an array
			-->
			
			<plugin>
				<groupId>
					org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>
					6.0.1</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>
								${project.basedir}/src/main/resources/openapi.yaml</inputSpec>
							<templateDirectory>
								src/main/resources/openapi-templates</templateDirectory>
							<generatorName>
								spring</generatorName>
							<apiPackage>
								com.javaworld.instagram.newsfeedservice.server.api</apiPackage>
							<modelPackage>
								com.javaworld.instagram.newsfeedservice.server.dto</modelPackage>
							<modelNameSuffix>
								ApiDto</modelNameSuffix>
							<configOptions>
								<interfaceOnly>true</interfaceOnly>
								<skipDefaultInterface>true</skipDefaultInterface>
								<reactive>
									false</reactive>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
